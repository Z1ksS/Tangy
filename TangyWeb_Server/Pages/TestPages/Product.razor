@page "/product";
@using Tangy_Models;

<div class="row border p-3">
	<h3>Product</h3><hr />

	<div>
		@*
			One way Data binding showcase
		*@

		<span>
			Name: @TestProduct.Name
		</span>
		<br />
		<span>
			Active: @TestProduct.IsActive
		</span>
		<br />
		<span>
			This product is: @(TestProduct.IsActive ? "IsActive" : "InActive") <br />
		</span>
		<br />
		<span>
			Property selected: @selectedProp
		</span>
		@if (!String.IsNullOrWhiteSpace(selectedProp))
		{
			<p>Property value: @TestProduct.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value</p>
		}

		@*
			Two way Data binding showcase
		*@
		<div>
			<label for="active">Active:</label>
			<input id="active" type="checkbox" @bind-value="@TestProduct.IsActive"/>

			<br />
			<span>
				Price: @TestProduct.Price
			</span>
			<label for="price">Price: </label>
			<input id="price" type="number" @bind-value="@TestProduct.Price" @bind-value:event="oninput" />
		</div>

		<div>
			<label for="selectProperties">Product Properties</label>
			<select id="selectProperties" @bind=selectedProp>
				@foreach(var prop in TestProduct.ProductProperties)
				{
					<option value="@prop.Key">@prop.Key</option>
				}
			</select>
		</div>
	</div>

	<div class="col-12 pt-4">
		<h2>Product Table</h2>
		<table class="table table-striped">
			<tbody>
				@foreach (var prod in Products)
				{
					<tr>
						<td>
							<input type="text" @bind-value="prod.Name" @bind-value:event="oninput" />
						</td>
						<td>
							<input type="text" @bind-value="prod.Price" @bind-value:event="oninput" />
						</td>
						<td>
							<input type="checkbox" @bind-value="prod.IsActive" checked="@(prod.IsActive?"checked":null)" />
						</td>
					</tr>
				}
			</tbody>
		</table>
		<br /><br />
		<h2>Product Summary</h2>
		@foreach (var prod in Products)
		{
			<p>@prod.Name [@prod.Price] is @(prod.IsActive ? "Active" : "InActive")</p>
		}
	</div>
</div>

@code {
	private string selectedProp = string.Empty;
	TestProduct TestProduct = new()
		{
			Id = 1,
			Name = "Candle",
			IsActive = true,
			Price = 10.99,
			ProductProperties = new List<TestProductProp>()
			{
				new TestProductProp { Id = 1, Key = "Color", Value="Black"},
				new TestProductProp { Id = 2, Key = "Flavor", Value = "Rose" },
				new TestProductProp { Id = 3, Key = "Size", Value = "20oz"},
			}
		};


	List<TestProduct> Products = new();

	protected override void OnInitialized()
	{
		Products.Add(new()
			{
				Id = 1,
				Name = "Midnight Blaze",
				IsActive = false,

				Price = 10.99,
				ProductProperties = new()
				{
					new TestProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
					new TestProductProp { Id = 2, Key = "Size", Value = "20oz"},
					new TestProductProp { Id = 3, Key = "Color", Value="Purple" }
				}
			});

		Products.Add(new()
			{
				Id = 2,
				Name = "Blossom Lily",
				IsActive = true,
				Price = 13.99,
				ProductProperties = new()
				{
					new TestProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
					new TestProductProp { Id = 2, Key = "Size", Value = "18oz" },
					new TestProductProp {Id = 3,Key = "Color",Value = "White"}
				}
			});
	}
}
